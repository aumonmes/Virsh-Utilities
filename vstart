#!/bin/bash
######################################
##
## Script to start several VMs at once
##
######################################


# Define colors for output messages
ERROR="1";
GOOD="2";
WARN="3";

function generate_icon(){
	echo "$(tput setaf $1)[ $2 ]$(tput sgr0)";
}

function get_icon(){
	case "$1" in
		"running") echo $(generate_icon $GOOD "\u23f5") # ⏵
			;;
		"paused") echo $(generate_icon $WARN "\u23f8") # ⏸
			;;
		"shut off") echo $(generate_icon $ERROR "\u23f9") # ⏹
			;;
		"crashed") echo $(generate_icon $ERROR "\u203b") # ※
			;;
		"in shutdown") echo $(generate_icon $WARN "\u2757") # ❗
			;;
		"idle") echo $(generate_icon $WARN "\u2053") # ⁓
			;;
		"dying") echo $(generate_icon $ERROR "\u2620") # ☠
			;;
		*) echo $(generate_icon $WARN "?")
			;;
	esac
}


# Checking privileges
if [ $UID != 0 ]; then
	sudo $0 $@;
	exit 0;
fi

# If no arguments just list
if [ $# == 0 ]; then
	cmd=$(virsh list --name --all);
	output="";
	for vm in $cmd; do
		vm_status=$(virsh domstate "$vm");
		icon=$(get_icon "$vm_status");
		output="$output$icon\t$vm\n";
	done
	printf "$output";
	exit 0
fi

# If there's arguments
start_vms="";
ACTION="virsh start";
output="";

if [ $1 == "--all" ] || [ $1 == "-a" ]; then
	cmd=`virsh list --name --all`;
	for vm in $cmd; do
		start_vms=$start_vms" "$vm;
	done
else
	start_vms=$@;
fi

for vm in $start_vms; do
	output=$($ACTION $vm 2>&1);
	if [[ "$output" == "error"* ]]; then
		if [[ "$output" == *"already active"* ]]; then
			printf "$(get_icon "in shutdown")\t$vm\tAlredy active\n";
		elif [[ "$output" == *"failed to get domain"* ]]; then
			printf "$(get_icon "in shutdown")\t$vm\tNot found\n";
		else
			printf "$(get_icon "dying")\t$vm\t$output\n";
		fi
	else
		printf "$(get_icon "running")\t$vm\tStarted\n";
	fi
done

exit 0;
